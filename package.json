{
	"name": "blitzmax",
	"version": "1.8.7",
	"displayName": "BlitzMax Language Basics",
	"description": "Provides snippets, syntax highlighting, bracket matching and folding in BlitzMax files.",
	"repository": {
		"type": "git",
		"url": "https://github.com/Hezkore/vscode-blitzmax-support"
	},
	"license": "MIT",
	"bugs": {
		"url": "https://github.com/Hezkore/vscode-blitzmax-support/issues"
	},
	"icon": "media/icon.png",
	"publisher": "Hezkore",
	"main": "./out/extension",
	"categories": [
		"Programming Languages",
		"Snippets",
		"Other"
	],
	"engines": {
		"vscode": "^1.32.0"
	},
	"keywords": [
		"BlitzMax",
		"BlitzMax NG",
		"bmax",
		"bmx"
	],
	"activationEvents": [
		"onLanguage:blitzmax"
	],
	"contributes": {
		"menus": {
			"editor/title": [
				{
					"when": "editorLangId == blitzmax",
					"command": "blitzmax.build",
					"group": "navigation@1"
				},
				{
					"when": "editorLangId == blitzmax",
					"command": "blitzmax.quickBuild",
					"group": "navigation@0"
				}
			],
			"explorer/context": [
				{
					"when": "resourceLangId == blitzmax",
					"command": "blitzmax.setSourceFile",
					"group": "1_modification"
				}
			],
			"editor/title/context": [
				{
					"when": "resourceLangId == blitzmax",
					"command": "blitzmax.setSourceFile",
					"group": "0"
				}
			]
		},
		"taskDefinitions": [
			{
				"type": "bmx",
				"properties": {
					"source":{
						"type": "string",
						"default": "${relativeFile}",
						"description": "Main source file."
					},
					"output":{
						"type": "string",
						"default": "${fileBasenameNoExtension}",
						"description": "Specifies the output file. (makeapp only)\nBy default, the output file is placed into the same directory as the root source file."
					},
					"make": {
						"type": "string",
						"description": "What to build as.",
						"default": "makeapp",
						"enum": [
							"makeapp",
							"makemods",
							"makelib"
						]
					},
					"app":{
						"type": "string",
						"description": "Specifies the application type. (makeapp only)",
						"enum": [
							"console",
							"gui"
						]
					},
					"arch":{
						"type": "string",
						"description": "Compiles to the specified architecture. (the default is the native for the current binary - For example, it will be x86 for an x86-built bmk)\nOptions vary depending on the current OS/architecture/installed toolchain and version of bcc..",
						"default": "auto",
						"enum": [
							"auto",
							"x86",
							"x64",
							"arm",
							"arm64",
							"armv7",
							"armeabi",
							"armeabiv7a",
							"arm64v8a"
						]
					},
					"platform":{
						"type": "string",
						"description": "Cross-compiles to the specific target platform.",
						"default": "auto",
						"enum": [
							"auto",
							"win32",
							"linux",
							"macos",
							"ios",
							"android",
							"raspberrypi",
							"nx"
						]
					},
					"threaded":{
						"type": "boolean",
						"description": "Builds multithreaded version.",
						"default": true
					},
					"debug":{
						"type": "boolean",
						"description": "Build as Debug.",
						"default": false
					},
					"gdb":{
						"type": "boolean",
						"description": "Generates line mappings suitable for GDB debugging.",
						"default": false
					},
					"quick":{
						"type": "boolean",
						"description": "Quick build.\nDoes not scan modules for changes. May result in quicker build times on some systems.\nThe default behaviour is to scan and build all requirements for the application, including modules.",
						"default": false
					},
					"execute":{
						"type": "boolean",
						"description": "Executes built application. (makeapp only)",
						"default": false
					},
					"verbose":{
						"type": "boolean",
						"description": "Verbose (noisy) build.",
						"default": false
					}
				}
			}
		],
		"keybindings": [
			{
				"command": "blitzmax.quickBuild",
				"key": "f5",
				"when": "editorLangId == blitzmax"
			},
			{
				"command": "workbench.action.tasks.reRunTask",
				"key": "f6",
				"when": "editorLangId == blitzmax"
			},
			{
				"command": "blitzmax.findHelp",
				"key": "f1",
				"when": "editorLangId == blitzmax"
			}
		],
		"commands": [
			{
				"command": "blitzmax.generateDocs",
				"title": "Generate Documentations",
				"category": "BlitzMax"
			},
			{
				"command": "blitzmax.findHelp",
				"title": "Find Help",
				"category": "BlitzMax"
			},
			{
				"command": "blitzmax.setSourceFile",
				"title": "Set as default task source file",
				"category": "BlitzMax"
			},
			{
				"command": "blitzmax.build",
				"title": "Build Application",
				"category": "BlitzMax",
				"icon": {
					"light": "media/build_light.svg",
					"dark": "media/build_dark.svg"
				}
			},
			{
				"command": "blitzmax.quickBuild",
				"title": "Quickly build a debug console application",
				"category": "BlitzMax",
				"icon": {
					"light": "media/build_run_light.svg",
					"dark": "media/build_run_dark.svg"
				}
			}
		],
		"languages": [
			{
				"id": "blitzmax",
				"extensions": [
					".bmx"
				],
				"aliases": [
					"BlitzMax NG",
					"BlitzMax",
					"bmax"
				],
				"configuration": "./language-configuration.json"
			}
		],
		"configurationDefaults": {
			"[blitzmax]": {
				"editor.insertSpaces": false,
				"editor.detectIndentation": false,
				"editor.trimAutoWhitespace": false,
				"editor.showFoldingControls": "always"
			}
		},
		"configuration": {
			"type": "object",
			"title": "BlitzMax",
			"properties": {
				"blitzmax.bmxPath": {
					"type": "string",
					"default": "",
					"description": "Path to BlitzMax. (e.g: C:\\Program Files (x86)\\BlitzMax)"
				},
				"blitzmax.funcArgCasting": {
					"type": "string",
					"description": "How to handle function argument casting issues. (NG only)",
					"enum": [
						"warn",
						"error"
					]
				}
			}
		},
		"grammars": [
			{
				"language": "blitzmax",
				"scopeName": "source.bmx",
				"path": "./syntaxes/blitzmax.json"
			}
		],
		"snippets": [
			{
				"language": "blitzmax",
				"path": "./snippets/blitzmax.json"
			}
		],
		"problemMatchers": [
			{
				"name": "blitzmax",
				"owner": "blitzmax",
				"source": "BlitzMax",
				"fileLocation": "absolute",
				"label": "The standard BlitzMax problem matcher",
				"background": {
					"beginsPattern": ".",
					"endsPattern": "."
				},
				"pattern": [
					{
						"regexp": "Compile (Error|Warning)?: (.*)",
						"message": 2,
						"severity": 1
					},
					{
						"regexp": "^\\[(.*.bmx);(\\d+);(\\d+)]",
						"file": 1,
						"line": 2,
						"endColumn": 3
					}
				]
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -b",
		"watch": "tsc -b -w"
	},
	"devDependencies": {
		"@types/node": "^12.6.0",
		"tslint": "*",
		"typescript": "*",
		"@types/vscode": "*"
	}
}
